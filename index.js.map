{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst key = '46793755-9d28ad9f5c835a0a0339cf9e7';\n\nexport function fetchImages(textInput) {\n  const params = new URLSearchParams({\n    key,\n    q: textInput,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n    return fetch(`${BASE_URL}?${params}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n    });\n}","// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\n\nexport function markup(arr) {\n    return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n         `<li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n              class=\"gallery-image\"\n              src=\"${webformatURL}\"\n              alt=\"${tags}\"\n              width=\"360\"\n            />\n          </a>\n          <div class=\"gallery-container\">\n            <div class=\"gallery-info-item\">\n              <h2 class=\"tittle\">Likes</h2>\n              <p class=\"number\">${likes}</p>\n            </div>\n            <div class=\"gallery-info-item\">\n              <h2 class=\"tittle\">Views</h2>\n              <p class=\"number\">${views}</p>\n            </div>\n            <div class=\"gallery-info-item\">\n              <h2 class=\"tittle\">Comments</h2>\n              <p class=\"number\">${comments}</p>\n            </div>\n            <div class=\"gallery-info-item\">\n              <h2 class=\"tittle\">Downloads</h2>\n              <p class=\"number\">${downloads}</p>\n            </div>\n          </div>\n        </li>`\n    )\n    .join('');\n    }","// У файлі main.js напиши всю логіку роботи додатка.\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchImages } from \"./js/pixabay-api.js\";\nimport { markup } from './js/render-functions.js';\n\nconst form = document.querySelector(\".form\");\nconst input = document.querySelector(\".input-text\");\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\n\nloader.style.display = 'none';\n\nform.addEventListener(\"submit\", handleSubmit);\n\nconst box = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n    gallery.innerHTML = '';\n    loader.style.display = 'block';\n    \n    if (!input.value.trim()) {\n        loader.style.display = 'none';\n        iziToast.error({\n            title: 'Error!',\n            titleSize: \"18px\",\n            message: 'Please, enter your search criteria',\n            position: \"topRight\"\n        });\n        return;\n    }\n\n    fetchImages(input.value.trim())\n        .then((data) => {\n            loader.style.display = 'none';\n            if (data.total === 0) {\n                iziToast.error({\n                    title: 'Error!',\n                    titleSize: \"18px\",\n                    message: \"Sorry, there are no images matching your search query. Please try again!\",\n                    position: \"topRight\"\n                });\n                return;\n            }\n                        \n            gallery.innerHTML = markup(data.hits);\n            box.refresh();\n            form.reset();\n        })\n        .catch((error) => {\n            loader.style.display = 'none'\n            iziToast.error({\n                title: \"Error!\",\n                titleSize: \"18px\",\n                message: `${error}`,\n                position: \"topRight\",\n            })\n        })\n}\n"],"names":["BASE_URL","key","fetchImages","textInput","params","response","markup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","input","gallery","loader","handleSubmit","box","SimpleLightbox","event","iziToast","data","error"],"mappings":"6vBAEA,MAAMA,EAAW,2BACXC,EAAM,qCAEL,SAASC,EAAYC,EAAW,CACrC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAAH,EACA,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAEC,OAAO,MAAM,GAAGH,CAAQ,IAAII,CAAM,EAAE,EAC/B,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,UAAU,EAEvC,OAAOA,EAAS,MAC5B,CAAK,CACL,CCnBO,SAASC,EAAOC,EAAK,CACxB,OAAOA,EAAI,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACnF;AAAA,0CACiCL,CAAa;AAAA;AAAA;AAAA,qBAGlCD,CAAY;AAAA,qBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAOSC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kCAIRC,CAAS;AAAA;AAAA;AAAA,cAItC,EACA,KAAK,EAAE,CACZ,CCvBA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/CA,EAAO,MAAM,QAAU,OAEvBH,EAAK,iBAAiB,SAAUI,CAAY,EAE5C,MAAMC,EAAM,IAAIC,EAAe,aAAc,CAC3C,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAED,SAASF,EAAaG,EAAO,CAKzB,GAJAA,EAAM,eAAc,EACpBL,EAAQ,UAAY,GACpBC,EAAO,MAAM,QAAU,QAEnB,CAACF,EAAM,MAAM,OAAQ,CACrBE,EAAO,MAAM,QAAU,OACvBK,EAAS,MAAM,CACX,MAAO,SACP,UAAW,OACX,QAAS,qCACT,SAAU,UACtB,CAAS,EACD,MACH,CAEDrB,EAAYc,EAAM,MAAM,MAAM,EACzB,KAAMQ,GAAS,CAEZ,GADAN,EAAO,MAAM,QAAU,OACnBM,EAAK,QAAU,EAAG,CAClBD,EAAS,MAAM,CACX,MAAO,SACP,UAAW,OACX,QAAS,2EACT,SAAU,UAC9B,CAAiB,EACD,MACH,CAEDN,EAAQ,UAAYX,EAAOkB,EAAK,IAAI,EACpCJ,EAAI,QAAO,EACXL,EAAK,MAAK,CACtB,CAAS,EACA,MAAOU,GAAU,CACdP,EAAO,MAAM,QAAU,OACvBK,EAAS,MAAM,CACX,MAAO,SACP,UAAW,OACX,QAAS,GAAGE,CAAK,GACjB,SAAU,UAC1B,CAAa,CACb,CAAS,CACT"}